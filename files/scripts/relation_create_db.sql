-- MySQL Script generated by MySQL Workbench
-- 09/18/17 22:13:26
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema social_network
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema social_network
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `social_network` ;
USE `social_network` ;

-- -----------------------------------------------------
-- Table `social_network`.`personal_info`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `social_network`.`personal_info` (
  `id` BIGINT NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(45) NOT NULL,
  `second_name` VARCHAR(45) NOT NULL,
  `birthday` DATE NOT NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `social_network`.`role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `social_network`.`role` (
  `id` BIGINT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `social_network`.`user_status`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `social_network`.`user_status` (
  `id` BIGINT NOT NULL,
  `code` VARCHAR(45) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `social_network`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `social_network`.`user` (
  `id` BIGINT NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `personal_info_id` BIGINT NOT NULL,
  `role_id` BIGINT NOT NULL,
  `user_status_id` BIGINT NOT NULL,
  PRIMARY KEY (`id`, `personal_info_id`, `role_id`, `user_status_id`),
  INDEX `fk_user_personal_info_idx` (`personal_info_id` ASC),
  INDEX `fk_user_role1_idx` (`role_id` ASC),
  INDEX `fk_user_user_status1_idx` (`user_status_id` ASC),
  CONSTRAINT `fk_user_personal_info`
    FOREIGN KEY (`personal_info_id`)
    REFERENCES `social_network`.`personal_info` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_role1`
    FOREIGN KEY (`role_id`)
    REFERENCES `social_network`.`role` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_user_status1`
    FOREIGN KEY (`user_status_id`)
    REFERENCES `social_network`.`user_status` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `social_network`.`dialog`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `social_network`.`dialog` (
  `id` BIGINT NOT NULL AUTO_INCREMENT,
  `sender_id` BIGINT NOT NULL DEFAULT NULL,
  `recipient_id` BIGINT NOT NULL DEFAULT NULL,
  `message_id` BIGINT NULL DEFAULT NULL,
  PRIMARY KEY (`id`, `recipient_id`, `sender_id`),
  INDEX `fk_dialog_user1_idx` (`recipient_id` ASC, `sender_id` ASC),
  CONSTRAINT `fk_dialog_user1`
    FOREIGN KEY (`recipient_id` , `sender_id`)
    REFERENCES `social_network`.`user` (`id` , `id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `social_network`.`message`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `social_network`.`message` (
  `id` BIGINT NOT NULL AUTO_INCREMENT,
  `text_message` TEXT NOT NULL,
  `created_date` DATETIME NOT NULL,
  `dialog_id` BIGINT NOT NULL,
  PRIMARY KEY (`id`, `dialog_id`),
  INDEX `fk_message_dialog1_idx` (`dialog_id` ASC),
  CONSTRAINT `fk_message_dialog1`
    FOREIGN KEY (`dialog_id`)
    REFERENCES `social_network`.`dialog` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `social_network`.`request_friend_status`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `social_network`.`request_friend_status` (
  `id` BIGINT NOT NULL AUTO_INCREMENT,
  `code` VARCHAR(20) NULL DEFAULT NULL,
  `name` VARCHAR(20) NULL DEFAULT NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `social_network`.`request_friend`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `social_network`.`request_friend` (
  `id` BIGINT NOT NULL AUTO_INCREMENT,
  `sender_id` BIGINT NOT NULL DEFAULT NULL,
  `recipient_id` BIGINT NOT NULL DEFAULT NULL,
  `status_id` BIGINT NOT NULL DEFAULT NULL,
  PRIMARY KEY (`id`, `sender_id`, `recipient_id`, `status_id`),
  INDEX `fk_request_friend_user1_idx` (`sender_id` ASC, `recipient_id` ASC),
  INDEX `fk_request_friend_request_friend_status1_idx` (`status_id` ASC),
  CONSTRAINT `fk_request_friend_user1`
    FOREIGN KEY (`sender_id` , `recipient_id`)
    REFERENCES `social_network`.`user` (`id` , `id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_request_friend_request_friend_status1`
    FOREIGN KEY (`status_id`)
    REFERENCES `social_network`.`request_friend_status` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `social_network`.`custom_event`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `social_network`.`custom_event` (
  `id` BIGINT NOT NULL AUTO_INCREMENT,
  `event_date` DATETIME NOT NULL,
  `event_name` TEXT NOT NULL,
  `author_id` BIGINT NOT NULL,
  PRIMARY KEY (`id`, `author_id`),
  INDEX `fk_custom_event_user1_idx` (`author_id` ASC),
  CONSTRAINT `fk_custom_event_user1`
    FOREIGN KEY (`author_id`)
    REFERENCES `social_network`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `social_network`.`custom_event_friend`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `social_network`.`custom_event_friend` (
  `id` BIGINT NOT NULL AUTO_INCREMENT,
  `event_id` BIGINT NOT NULL,
  `friend_id` BIGINT NOT NULL,
  PRIMARY KEY (`id`, `friend_id`, `event_id`),
  INDEX `fk_custom_event_friend_user1_idx` (`friend_id` ASC),
  INDEX `fk_custom_event_friend_custom_event1_idx` (`event_id` ASC),
  CONSTRAINT `fk_custom_event_friend_user1`
    FOREIGN KEY (`friend_id`)
    REFERENCES `social_network`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_custom_event_friend_custom_event1`
    FOREIGN KEY (`event_id`)
    REFERENCES `social_network`.`custom_event` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `social_network`.`friend`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `social_network`.`friend` (
  `id` BIGINT NOT NULL AUTO_INCREMENT,
  `user_id` BIGINT NOT NULL,
  `friend_id` BIGINT NOT NULL,
  PRIMARY KEY (`id`, `user_id`, `friend_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_friend_user1_idx` (`user_id` ASC, `friend_id` ASC),
  CONSTRAINT `fk_friend_user1`
    FOREIGN KEY (`user_id` , `friend_id`)
    REFERENCES `social_network`.`user` (`id` , `id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
